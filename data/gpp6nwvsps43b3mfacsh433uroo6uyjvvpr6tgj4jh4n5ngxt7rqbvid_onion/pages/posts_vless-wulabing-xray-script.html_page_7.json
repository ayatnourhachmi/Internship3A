{
    "html_content": "<!DOCTYPE html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"utf-8\"/>\n  <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n  <title>\n   VLESS with Wulabing XRay Script\n  </title>\n  <link href=\"../general.css\" rel=\"stylesheet\" type=\"text/css\"/>\n </head>\n <body>\n  <div id=\"header\">\n   <div class=\"content\">\n    <h2>\n     <a href=\"/\">\n      Oil and Fish\n     </a>\n    </h2>\n   </div>\n  </div>\n  <div id=\"main\">\n   <div class=\"content\">\n    <h1>\n     VLESS with Wulabing XRay Script\n    </h1>\n    <p>\n     Xray is a fork of V2Ray. It is an important tool for accessing the international Internet. Xray/V2Ray offer a far wider range of features than Shadowsocks.\n    </p>\n    <p>\n     VLESS is a simplified protocol that can result in performance improvements over the original VMESS protocol. VLESS does not depend on the system time being correct. Its authentication method continues to be Universally Unique Id (UUID), but the alterId of the VMESS protocol is not required.\n    </p>\n    <p>\n     This page shows you how to install XRay with the VLESS protocol using the Wulabing script. We give instructions for Debian 10+ (or Ubuntu) and CentOS 8 servers. Note that CentOS 8 goes end-of-life on December 31, 2021, and so Debian/Ubuntu are preferred.\n    </p>\n    <h2>\n     <a id=\"1\">\n     </a>\n     1. Server\n    </h2>\n    <h3>\n     <a id=\"1-1\">\n     </a>\n     1.1. Obtain VPS and Domain Name\n    </h3>\n    <p>\n     First, you’ll need to rent a virtual private server (VPS). In the rest of this article, we’ll write its IP address as\n     <code>\n      zz.zz.zz.zz\n     </code>\n     .\n    </p>\n    <p>\n     Also obtain a domain name. We will give\n     <code>\n      yyyyy.xyz\n     </code>\n     as our example domain name, and\n     <code>\n      www.yyyyy.xyz\n     </code>\n     as our example hostname (fully qualified domain name) for the XRay server.\n    </p>\n    <p>\n     Create a DNS\n     <code>\n      A\n     </code>\n     record pointing from hostname\n     <code>\n      www.yyyyy.xyz\n     </code>\n     to the server IP address\n     <code>\n      zz.zz.zz.zz\n     </code>\n     .\n    </p>\n    <h3>\n     <a id=\"1-2\">\n     </a>\n     1.2. Update Server\n    </h3>\n    <p>\n     Update your server. On CentOS 8:\n    </p>\n    <blockquote>\n     <code>\n      yum update -y\n     </code>\n    </blockquote>\n    <p>\n     On Debian 10+ or Ubuntu:\n    </p>\n    <blockquote>\n     <code>\n      apt update &amp;&amp; apt upgrade -y\n     </code>\n    </blockquote>\n    <h3>\n     <a id=\"1-3\">\n     </a>\n     1.3. Open Firewall\n    </h3>\n    <p>\n     If you have implemented a firewall on your server, you must open port\n     <code>\n      80\n     </code>\n     and port\n     <code>\n      443\n     </code>\n     . On CentOS 8:\n    </p>\n    <blockquote>\n     <code>\n      firewall-cmd --permanent --zone=public --add-service=http\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      firewall-cmd --permanent --zone=public --add-service=https\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      firewall-cmd --reload\n     </code>\n    </blockquote>\n    <p>\n     On Debian 10+ or Ubuntu (assuming you used\n     <code>\n      nftables\n     </code>\n     to build your firewall):\n    </p>\n    <blockquote>\n     <code>\n      nft add rule inet filter input tcp dport { http, https } counter accept\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      nft list ruleset &gt; /etc/nftables.conf\n     </code>\n    </blockquote>\n    <p>\n     Here is a template for a completed\n     <code>\n      /etc/nftables.conf\n     </code>\n     , where\n     <code>\n      xx.xx.xx.xx\n     </code>\n     represents your workstation’s IP address:\n    </p>\n    <pre>\ntable inet filter {\n        chain input {\n                type filter hook input priority filter; policy drop;\n                ct state established,related counter packets 0 bytes 0 accept\n                iif \"lo\" counter packets 0 bytes 0 accept\n                ip protocol icmp icmp type echo-request counter packets 0 bytes 0 accept\n                ip6 nexthdr ipv6-icmp icmpv6 type echo-request counter packets 0 bytes 0 accept\n                tcp dport 22 ip saddr xx.xx.xx.xx/32 counter packets 0 bytes 0 accept\n                tcp dport { 80, 443 } counter packets 0 bytes 0 accept\n        }\n\n        chain forward {\n                type filter hook forward priority filter; policy accept;\n        }\n\n        chain output {\n                type filter hook output priority filter; policy accept;\n        }\n}\n</pre>\n    <p>\n     If you used\n     <code>\n      iptables\n     </code>\n     or\n     <code>\n      ufw\n     </code>\n     to build a firewall, you must issue the equivalent commands to open ports\n     <code>\n      80\n     </code>\n     and\n     <code>\n      443\n     </code>\n     .\n    </p>\n    <h3>\n     <a id=\"1-4\">\n     </a>\n     1.4. Download and Run Wulabing Script\n    </h3>\n    <p>\n     Download and run the Wulabing script. (On CentOS, you may need to do\n     <code>\n      yum install wget\n     </code>\n     before this will work.)\n    </p>\n    <blockquote>\n     <code>\n      wget -N --no-check-certificate -q -O install.sh \"https://raw.githubusercontent.com/wulabing/Xray_onekey/main/install.sh\"\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      chmod +x install.sh\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      bash install.sh\n     </code>\n    </blockquote>\n    <p>\n     The script displays a menu offering the following options. This post adds English translations to the prompts:\n    </p>\n    <blockquote>\n     <code>\n      Xray 安装管理脚本 installation management script [1.3.3]\n      <br/>\n      ---authored by wulabing---\n      <br/>\n      https://github.com/wulabing\n      <br/>\n      <br/>\n      当前已安装版本 Currently installed version：None\n      <br/>\n      —————————————— 安装向导 ——————————————\n      <br/>\n      0. 升级 脚本 Upgrade script\n      <br/>\n      1. 安装 Install Xray (VLESS+TCP+XTLS/TLS+Nginx)\n      <br/>\n      2. 安装 Install Xray (VLESS+TCP+XTLS/TLS+Nginx 及 VLESS+TCP+TLS+Nginx+WebSocket 回落并存模式)\n      <br/>\n      —————————————— 配置变更 ——————————————\n      <br/>\n      11. 变更 change UUID\n      <br/>\n      12. 变更 change TLS 最低适配版本 minimum version\n      <br/>\n      13. 变更 change 连接端口 connection port\n      <br/>\n      14. 变更 change WebSocket PATH\n      <br/>\n      —————————————— 查看信息 ——————————————\n      <br/>\n      21. 查看 View 实时访问日志 real-time access log\n      <br/>\n      22. 查看 View 实时错误日志 real-time error log\n      <br/>\n      23. 查看 View Xray 配置链接 configuration link\n      <br/>\n      —————————————— 其他选项 ——————————————\n      <br/>\n      31. 安装 Install 4 合 1 BBR、锐速安装脚本\n      <br/>\n      32. 安装 Install MTproxy(不推荐使用,请相关用户关闭或卸载)\n      <br/>\n      33. 卸载 Uninstall Xray\n      <br/>\n      34. 更新 Update Xray-core\n      <br/>\n      35. 安装 Install Xray-core 测试版(Pre)\n      <br/>\n      36. 手动更新SSL证书 Manually renew the SSL certificate\n      <br/>\n      40. 退出 Exit\n      <br/>\n      请输入数字 Please key in numbers：\n     </code>\n    </blockquote>\n    <p>\n     Choose option\n     <code>\n      1\n     </code>\n     to install XRay and Nginx.\n    </p>\n    <p>\n     After doing some checks and installing some packages, the script asks you some more questions.\n    </p>\n    <blockquote>\n     <code>\n      请输入你的域名信息(eg:www.wulabing.com):\n      <br/>\n      Please enter your domain information (e.g. www.wulabing.com):\n     </code>\n    </blockquote>\n    <p>\n     Put your hostname (fully qualified domain name) for the server, which in our example is\n     <code>\n      www.yyyyy.xyz\n     </code>\n     .\n    </p>\n    <p>\n     The script checks that the domain name resolves to this server’s IP address.\n    </p>\n    <p>\n     Next it asks for the port you want to connect on:\n    </p>\n    <blockquote>\n     <code>\n      请输入连接端口（default:443）:\n      <br/>\n      Please enter the connection port (default 443):\n     </code>\n    </blockquote>\n    <p>\n     We recommend you use the default port\n     <code>\n      443\n     </code>\n     .\n    </p>\n    <p>\n     You are asked to select which versions of TLS you want to support:\n    </p>\n    <blockquote>\n     <code>\n      请选择支持的 TLS 版本（默认：TLS1.3 only）:\n      <br/>\n      1: TLS1.1, TLS1.2 and TLS1.3（兼容模式）\n      <br/>\n      2: TLS1.2 and TLS1.3 (兼容模式)\n      <br/>\n      3: TLS1.3 only\n      <br/>\n      请输入：\n     </code>\n    </blockquote>\n    <p>\n     We recommend you choose option\n     <code>\n      2\n     </code>\n     , TLS 1.2 and TLS 1.3.\n    </p>\n    <blockquote>\n     <code>\n      请输入用于注册域名的邮箱(eg:xxx@gmail.com):\n      <br/>\n      Please enter the email address used to register the domain name\n     </code>\n    </blockquote>\n    <p>\n     Enter your email address.\n    </p>\n    <p>\n     At the end of the script’s run, it displays the parameters for the client:\n    </p>\n    <blockquote>\n     <code>\n      Xray 配置信息\n      <br/>\n      地址（address）: www.yyyyy.xyz\n      <br/>\n      端口（port）： 443\n      <br/>\n      用户 ID（UUID）： 484d6bb9-4af1-4f5b-b9f6-ff8b348dcdda\n      <br/>\n      流控（flow）： xtls-rprx-direct\n      <br/>\n      加密方式（security）： none\n      <br/>\n      传输协议（network）： tcp\n      <br/>\n      伪装类型（type）： none\n      <br/>\n      底层传输安全： xtls 或 tls\n     </code>\n    </blockquote>\n    <p>\n     It also displays the parameters as a\n     <code>\n      vless://\n     </code>\n     link. For example:\n    </p>\n    <blockquote>\n     <code>\n      [OK] URL 链接（VLESS + TCP + TLS）\n      <br/>\n      [OK] vless://484d6bb9-4af1-4f5b-b9f6-ff8b348dcdda@www.yyyyy.xyz:443?security=tls&amp;flow=xtls-rprx-direct#TLS_wulabing-www.yyyyy.xyz\n     </code>\n    </blockquote>\n    <p>\n     You need these details, so copy them to your workstation’s clipboard and possibly also a text editor on your workstation.\n    </p>\n    <p>\n     If you lose the details, you can redisplay them by rerunning the script and choosing option 23:\n    </p>\n    <blockquote>\n     <code>\n      bash install.sh\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      23\n     </code>\n    </blockquote>\n    <p>\n     The script stores the server configuration JSON in the file\n     <code>\n      /usr/local/etc/xray/config.json\n     </code>\n     . You can display this file if you are interested:\n    </p>\n    <blockquote>\n     <code>\n      cat /usr/local/etc/xray/config.json\n     </code>\n    </blockquote>\n    <p>\n     Also, you can visit your web server\n     <code>\n      https://www.yyyyy.xyz\n     </code>\n     in a browser to see the camouflage website (WebGL Fluid Simulation) running on Nginx.\n    </p>\n    <h2>\n     <a id=\"2\">\n     </a>\n     2. Client\n    </h2>\n    <h3>\n     <a id=\"2-1\">\n     </a>\n     2.1. Windows\n    </h3>\n    <p>\n     Here is how to connect to your Xray server from a Windows client computer.\n    </p>\n    <p>\n     We will use V2RayN, the graphical user interface for V2Ray and Xray on the Windows platform.\n    </p>\n    <p>\n     Open a browser and visit\n     <a href=\"https://github.com/2dust/v2rayN/releases\" target=\"_blank\">\n      GitHub\n     </a>\n     . Download\n     <code>\n      v2rayN-Core.zip\n     </code>\n     for the latest release. Version 3.21 and up support VLESS. After you’ve downloaded\n     <code>\n      v2rayN-Core.zip\n     </code>\n     , unzip the zip file.\n    </p>\n    <p>\n     Double-click\n     <code>\n      v2rayN.exe\n     </code>\n     to launch V2RayN. The first time you run the program, you may get a warning from Windows Defender SmartScreen to say Windows protected your PC. Click\n     <strong>\n      More info\n     </strong>\n     , then click\n     <strong>\n      Run anyway\n     </strong>\n     .\n    </p>\n    <p>\n     The V2RayN icon appears in the system tray toward the bottom right of your Windows desktop. Click the V2RayN icon in the system tray to bring up the V2RayN interface.\n    </p>\n    <p>\n     Under the\n     <strong>\n      Help\n     </strong>\n     button (the question mark icon), select\n     <strong>\n      语言-[中文简体]\n     </strong>\n     for simplified Chinese, or\n     <strong>\n      Language-[English]\n     </strong>\n     for English.\n    </p>\n    <p>\n     Restart V2RayN to see the interface in the new language.\n    </p>\n    <img alt=\"V2RayN panel\" src=\"../images/trojan-go-v2rayn-panel.png\"/>\n    <p>\n     If you want to add a server manually, then click\n     <strong>\n      Servers\n     </strong>\n     to see the available options. However, we will use an easier method. This is to copy and paste the\n     <code>\n      vless://\n     </code>\n     URL. In our example, the link was:\n    </p>\n    <blockquote>\n     <code>\n      vless://484d6bb9-4af1-4f5b-b9f6-ff8b348dcdda@www.yyyyy.xyz:443?security=tls&amp;flow=xtls-rprx-direct#TLS_wulabing-www.yyyyy.xyz\n     </code>\n    </blockquote>\n    <p>\n     To copy and paste the\n     <code>\n      vless://\n     </code>\n     URL:\n    </p>\n    <ol>\n     <li>\n      Copy the link to your Windows clipboard\n     </li>\n     <li>\n      Click on the\n      <strong>\n       Server list\n      </strong>\n      area of your V2RayN window\n     </li>\n     <li>\n      Do\n      <strong>\n       Ctrl\n      </strong>\n      +\n      <strong>\n       v\n      </strong>\n      to paste the new server into V2RayN\n     </li>\n    </ol>\n    <p>\n     Highlight your server’s row, and press\n     <strong>\n      Enter\n     </strong>\n     to connect to it. Messages appear in the box at the bottom.\n    </p>\n    <p>\n     After the connection is made, you can optionally close the V2RayN panel. V2RayN continues to run and is accessible via its icon in the system tray.\n    </p>\n    <p>\n     Now that your Xray client (V2RayN) is connected to the Xray server, configure your browser to send traffic to the XRay client. (You could alternatively specify a system-wide proxy server in the Windows\n     <strong>\n      Settings\n     </strong>\n     app, but in this tutorial we proxy at the browser level.)\n    </p>\n    <p>\n     In Firefox, click the hamburger menu, then select\n     <strong>\n      Settings\n     </strong>\n     . Select the\n     <strong>\n      General\n     </strong>\n     tab. Scroll down to the bottom to the heading\n     <strong>\n      Network Settings\n     </strong>\n     . Click the\n     <strong>\n      Settings\n     </strong>\n     button.\n    </p>\n    <ul>\n     <li>\n      Select\n      <strong>\n       Manual proxy configuration.\n      </strong>\n     </li>\n     <li>\n      Fill in\n      <code>\n       127.0.0.1\n      </code>\n      in SOCKS Host.\n     </li>\n     <li>\n      Fill in\n      <code>\n       10808\n      </code>\n      in the Port.\n      <em>\n       Note that V2RayN uses port 10808 in contrast to the more common port 1080 for the local proxy.\n      </em>\n     </li>\n     <li>\n      Select\n      <strong>\n       SOCKS v5.\n      </strong>\n     </li>\n     <li>\n      Check\n      <strong>\n       Proxy DNS when using SOCKS v5.\n      </strong>\n     </li>\n    </ul>\n    <img alt=\"Firefox network connection settings to use manual proxy configuration\" src=\"../images/firefox-connection-settings.png\"/>\n    <p>\n     In Chrome, you can do the same thing by installing the SwitchyOmega extension and configuring it to use the SOCKS5 proxy on\n     <code>\n      127.0.0.1\n     </code>\n     port\n     <code>\n      10808\n     </code>\n     .\n    </p>\n    <p>\n     Your browser is now configured to proxy traffic to the V2RayN client, and the client is in turn connected to your XRay server. Your browsing requests and responses are being transmitted, totally encrypted, via the remote XRay server.\n    </p>\n    <p>\n     Check the end-to-end functionality to confirm that V2RayN and Firefox/Chrome are configured correctly. With V2RayN still running, and Firefox/Chrome still proxied, visit\n     <a href=\"https://ipchicken.com\" target=\"_blank\">\n      IP Chicken\n     </a>\n     . You should see the IP address of the server, not your local client.\n    </p>\n    <h3>\n     <a id=\"2-2\">\n     </a>\n     2.2. Linux\n    </h3>\n    <p>\n     Here is how to connect to your Xray server from a Linux client computer.\n    </p>\n    <p>\n     Open Firefox. Download the latest XRay for 64-bit Linux from\n     <a href=\"https://github.com/XTLS/Xray-core/releases\" target=\"_blank\">\n      GitHub\n     </a>\n     . At the time of writing, it is version 1.4.2. The file to download for a 64-bit PC running Linux is\n     <code>\n      Xray-linux-64.zip\n     </code>\n     .\n    </p>\n    <p>\n     To unzip\n     <code>\n      Xray-linux-64.zip\n     </code>\n     , open a terminal and issue the commands:\n    </p>\n    <blockquote>\n     <code>\n      sudo apt install unzip -y\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      cd ~/Downloads\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      unzip Xray-linux-64.zip\n     </code>\n    </blockquote>\n    <img alt=\"Unzipping the Xray core for Linux zip file\" src=\"../images/xray-linux-unzip.png\"/>\n    <p>\n     In the terminal (or in a text editor), create an XRay client configuration file named\n     <code>\n      config.json\n     </code>\n     :\n    </p>\n    <blockquote>\n     <code>\n      vi config.json\n     </code>\n    </blockquote>\n    <p>\n     Insert the template below, substituting in your actual values for our example\n     <code>\n      address\n     </code>\n     and\n     <code>\n      id\n     </code>\n     :\n    </p>\n    <pre>\n{\n  \"inbounds\": [\n    {\n      \"port\": 1080,\n      \"listen\": \"127.0.0.1\",\n      \"protocol\": \"socks\",\n      \"sniffing\": {\n        \"enabled\": true,\n        \"destOverride\": [\"http\", \"tls\"]\n      },\n      \"settings\": {\n        \"auth\": \"noauth\",\n        \"udp\": false\n      }\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"protocol\": \"vless\",\n      \"settings\": {\n        \"vnext\": [\n          {\n            \"address\": \"www.yyyyy.xyz\",\n            \"port\": 443,\n            \"users\": [\n              {\n                \"id\": \"484d6bb9-4af1-4f5b-b9f6-ff8b348dcdda\",\n                \"alterId\": 0,\n                \"security\": \"auto\",\n                \"encryption\": \"none\",\n                \"flow\": \"\"\n              }\n            ]\n          }\n        ]\n      },\n      \"streamSettings\": {\n        \"network\": \"tcp\",\n        \"security\": \"tls\",\n        \"tlsSettings\": {\n          \"allowInsecure\": false\n        }\n      }\n    }\n  ]\n}\n</pre>\n    <p>\n     Save the file with your revised values in it.\n    </p>\n    <p>\n     In your terminal emulator, start the V2Ray client running:\n    </p>\n    <blockquote>\n     <code>\n      ./xray -config=config.json\n     </code>\n    </blockquote>\n    <img alt=\"Xray core running in a Linux terminal\" src=\"../images/xray-linux-running.png\"/>\n    <p>\n     Leave the terminal open, with Xray running in it.\n    </p>\n    <p>\n     Open Firefox. From the hamburger menu, select\n     <strong>\n      Settings\n     </strong>\n     . On the\n     <strong>\n      General\n     </strong>\n     page, in the\n     <strong>\n      Network Settings\n     </strong>\n     section, click\n     <strong>\n      Settings\n     </strong>\n     . Set the network settings as follows:\n    </p>\n    <ul>\n     <li>\n      Select\n      <strong>\n       Manual proxy configuration.\n      </strong>\n     </li>\n     <li>\n      Fill in\n      <code>\n       127.0.0.1\n      </code>\n      in SOCKS Host.\n     </li>\n     <li>\n      Fill in\n      <code>\n       1080\n      </code>\n      in the Port.\n     </li>\n     <li>\n      Select\n      <strong>\n       SOCKS v5.\n      </strong>\n     </li>\n     <li>\n      Check\n      <strong>\n       Proxy DNS when using SOCKS v5.\n      </strong>\n     </li>\n    </ul>\n    <img alt=\"Firefox manual proxy configuration for Xray on Linux\" src=\"../images/xray-linux-manual-proxy.png\"/>\n    <p>\n     Click\n     <strong>\n      OK\n     </strong>\n     .\n    </p>\n    <p>\n     Firefox now sends requests to the XRay client, which sends them to the XRay server. Do an end-to end test by visiting a site such as\n     <a href=\"https://ipchicken.com\" target=\"_blank\">\n      IP Chicken\n     </a>\n     .\n    </p>\n    <img alt=\"Checking your IP address through Xray on Linux at IPchicken\" src=\"../images/xray-linux-ipchicken.png\"/>\n    <h3>\n     <a id=\"2-3\">\n     </a>\n     2.3. macOS\n    </h3>\n    <p>\n     For macOS clients, use the latest release of Qv2ray from\n     <a href=\"https://github.com/Qv2ray/Qv2ray/releases\" target=\"_blank\">\n      GitHub\n     </a>\n     . The file to download is named\n     <code>\n      Qv2ray.v2.7.0-pre2.macOS-x64.dmg\n     </code>\n     .\n    </p>\n    <h3>\n     <a id=\"2-4\">\n     </a>\n     2.4. Android\n    </h3>\n    <p>\n     Install V2RayNG from either\n     <a href=\"https://play.google.com/store/apps/details?id=com.v2ray.ang\" target=\"_blank\">\n      Google Play\n     </a>\n     or\n     <a href=\"https://github.com/2dust/v2rayNG/releases\" target=\"_blank\">\n      GitHub\n     </a>\n     . On Android, V2Ray/Xray clients act more like VPNs, so there is no need to proxy the browser.\n    </p>\n    <h3>\n     <a id=\"2-5\">\n     </a>\n     2.5. iOS\n    </h3>\n    <p>\n     There are no free clients for iOS. Look in the iOS App Store for\n     <a href=\"https://apps.apple.com/us/app/shadowrocket/id932747118\" target=\"_blank\">\n      Shadowrocket\n     </a>\n     .\n    </p>\n    <h2>\n     <a id=\"3\">\n     </a>\n     3. Get Help and Report Issues\n    </h2>\n    <p>\n     If you have any other problems, SSH into your server to take a look at the logs. To view the V2Ray error log, enter the command:\n    </p>\n    <blockquote>\n     <code>\n      tail /var/log/xray/error.log\n     </code>\n    </blockquote>\n    <p>\n     To view the Nginx error log, enter the command:\n    </p>\n    <blockquote>\n     <code>\n      tail /etc/nginx/logs/error.log\n     </code>\n    </blockquote>\n    <p>\n     For the Wulabing script:\n    </p>\n    <ul>\n     <li>\n      Telegram support group\n      <a href=\"https://t.me/wulabing_v2ray\" target=\"_blank\">\n       https://t.me/wulabing_v2ray\n      </a>\n     </li>\n     <li>\n      Telegram announcement channel\n      <a href=\"https://t.me/wulabing_channel\" target=\"_blank\">\n       https://t.me/wulabing_channel\n      </a>\n     </li>\n    </ul>\n    <p>\n     If you discover an issue, report it on the official GitHub issues page for the software you are using:\n    </p>\n    <ul>\n     <li>\n      <a href=\"https://github.com/wulabing/Xray_onekey/issues\" target=\"_blank\">\n       Wulabing Xray script\n      </a>\n     </li>\n     <li>\n      <a href=\"https://github.com/XTLS/Xray-core/issues\" target=\"_blank\">\n       XRay\n      </a>\n     </li>\n     <li>\n      <a href=\"https://github.com/2dust/v2rayN/issues\" target=\"_blank\">\n       V2RayN\n      </a>\n     </li>\n     <li>\n      <a href=\"https://github.com/2dust/v2rayNG/issues\" target=\"_blank\">\n       V2RayNG\n      </a>\n     </li>\n     <li>\n      <a href=\"https://github.com/Qv2ray/Qv2ray/issues\" target=\"_blank\">\n       Qv2ray\n      </a>\n     </li>\n    </ul>\n    <h2>\n     <a id=\"a\">\n     </a>\n     Appendix A. Server Configuration File\n    </h2>\n    <p>\n     Here is a template of the file\n     <code>\n      /usr/local/etc/xray/config.json\n     </code>\n     created by the Wulabing script.\n    </p>\n    <pre>\n{\n  \"log\": {\n    \"access\": \"/var/log/xray/access.log\",\n    \"error\": \"/var/log/xray/error.log\",\n    \"loglevel\": \"warning\"\n  },\n  \"inbounds\": [\n    {\n      \"port\": 443,\n      \"protocol\": \"vless\",\n      \"settings\": {\n        \"clients\": [\n          {\n            \"id\": \"484d6bb9-4af1-4f5b-b9f6-ff8b348dcdda\",\n            \"flow\": \"xtls-rprx-direct\"\n          }\n        ],\n        \"decryption\": \"none\",\n        \"fallbacks\": [\n          {\n            \"dest\": 60000,\n            \"alpn\": \"\",\n            \"xver\": 1\n          },\n          {\n            \"dest\": 60001,\n            \"alpn\": \"h2\",\n            \"xver\": 1\n          }\n        ]\n      },\n      \"streamSettings\": {\n        \"network\": \"tcp\",\n        \"security\": \"xtls\",\n        \"xtlsSettings\": {\n          \"minVersion\": \"1.2\",\n          \"certificates\": [\n            {\n              \"certificateFile\": \"/usr/local/etc/xray/self_signed_cert.pem\",\n              \"keyFile\": \"/usr/local/etc/xray/self_signed_key.pem\"\n            },\n            {\n              \"certificateFile\": \"/ssl/xray.crt\",\n              \"keyFile\": \"/ssl/xray.key\"\n            }\n          ]\n        }\n      },\n      \"sniffing\": {\n        \"enabled\": true,\n        \"destOverride\": [\n          \"http\",\n          \"tls\"\n        ]\n      }\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"protocol\": \"freedom\"\n    }\n  ]\n}\n</pre>\n    <h2>\n     <a id=\"b\">\n     </a>\n     Appendix B. Client Configuration File\n    </h2>\n    <p>\n     The V2RayN GUI stores its server configurations internally in a file named\n     <code>\n      guiNConfig.json\n     </code>\n     . V2RayN converts this to a standard XRay client configuration file named\n     <code>\n      config.json\n     </code>\n     . It will look something like this:\n    </p>\n    <pre>\n{\n  \"log\": {\n    \"access\": \"\",\n    \"error\": \"\",\n    \"loglevel\": \"warning\"\n  },\n  \"inbounds\": [\n    {\n      \"tag\": \"socks\",\n      \"port\": 10808,\n      \"listen\": \"127.0.0.1\",\n      \"protocol\": \"socks\",\n      \"sniffing\": {\n        \"enabled\": true,\n        \"destOverride\": [\n          \"http\",\n          \"tls\"\n        ]\n      },\n      \"settings\": {\n        \"auth\": \"noauth\",\n        \"udp\": true,\n        \"allowTransparent\": false\n      }\n    },\n    {\n      \"tag\": \"http\",\n      \"port\": 10809,\n      \"listen\": \"127.0.0.1\",\n      \"protocol\": \"http\",\n      \"sniffing\": {\n        \"enabled\": true,\n        \"destOverride\": [\n          \"http\",\n          \"tls\"\n        ]\n      },\n      \"settings\": {\n        \"udp\": false,\n        \"allowTransparent\": false\n      }\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"tag\": \"proxy\",\n      \"protocol\": \"vless\",\n      \"settings\": {\n        \"vnext\": [\n          {\n            \"address\": \"www.xxxxx.xyz\",\n            \"port\": 443,\n            \"users\": [\n              {\n                \"id\": \"484d6bb9-4af1-4f5b-b9f6-ff8b348dcdda\",\n                \"alterId\": 0,\n                \"email\": \"t@t.tt\",\n                \"security\": \"auto\",\n                \"encryption\": \"none\",\n                \"flow\": \"\"\n              }\n            ]\n          }\n        ]\n      },\n      \"streamSettings\": {\n        \"network\": \"tcp\",\n        \"security\": \"tls\",\n        \"tlsSettings\": {\n          \"allowInsecure\": false\n        }\n      },\n      \"mux\": {\n        \"enabled\": false,\n        \"concurrency\": -1\n      }\n    },\n    {\n      \"tag\": \"direct\",\n      \"protocol\": \"freedom\",\n      \"settings\": {}\n    },\n    {\n      \"tag\": \"block\",\n      \"protocol\": \"blackhole\",\n      \"settings\": {\n        \"response\": {\n          \"type\": \"http\"\n        }\n      }\n    }\n  ],\n  \"routing\": {\n    \"domainStrategy\": \"IPIfNonMatch\",\n    \"rules\": [\n      {\n        \"type\": \"field\",\n        \"inboundTag\": [\n          \"api\"\n        ],\n        \"outboundTag\": \"api\"\n      },\n      {\n        \"type\": \"field\",\n        \"outboundTag\": \"proxy\",\n        \"domain\": [\n          \"geosite:google\"\n        ]\n      },\n      {\n        \"type\": \"field\",\n        \"outboundTag\": \"direct\",\n        \"domain\": [\n          \"domain:example-example.com\",\n          \"domain:example-example2.com\"\n        ]\n      },\n      {\n        \"type\": \"field\",\n        \"outboundTag\": \"block\",\n        \"domain\": [\n          \"geosite:category-ads-all\"\n        ]\n      }\n    ]\n  }\n}\n</pre>\n    <p>\n     <em>\n      Updated 2021-06-16\n     </em>\n    </p>\n   </div>\n  </div>\n  <div id=\"footer\">\n   <div class=\"content\">\n    <p>\n     This site is provided for information only. It cannot replace the advice of a trained security professional. If lives or safety depend on your security, please seek the advice of an expert.\n    </p>\n   </div>\n  </div>\n </body>\n</html>\n"
}