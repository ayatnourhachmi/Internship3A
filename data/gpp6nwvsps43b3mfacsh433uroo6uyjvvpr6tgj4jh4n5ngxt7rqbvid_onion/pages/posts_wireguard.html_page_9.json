{
    "html_content": "<!DOCTYPE html>\n<html lang=\"en\">\n <head>\n  <meta charset=\"utf-8\"/>\n  <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n  <title>\n   WireGuard\n  </title>\n  <link href=\"../general.css\" rel=\"stylesheet\" type=\"text/css\"/>\n </head>\n <body>\n  <div id=\"header\">\n   <div class=\"content\">\n    <h2>\n     <a href=\"/\">\n      Oil and Fish\n     </a>\n    </h2>\n   </div>\n  </div>\n  <div id=\"main\">\n   <div class=\"content\">\n    <h1>\n     WireGuard\n    </h1>\n    <p>\n     WireGuard is not designed for censorship circumvention. Nevertheless, because it is new, it may not yet be blocked by censorship firewalls.\n    </p>\n    <h2>\n     <a id=\"server\">\n     </a>\n     Server\n    </h2>\n    <p>\n     SSH, PuTTY, or Xshell into your server. Get the server up to date. On CentOS:\n    </p>\n    <blockquote>\n     <code>\n      yum update -y\n     </code>\n    </blockquote>\n    <p>\n     On Debian or Ubuntu:\n    </p>\n    <blockquote>\n     <code>\n      apt update\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      apt upgrade -y\n     </code>\n    </blockquote>\n    <p>\n     Download the Angristan WireGuard install script from GitHub. On CentOS, you may need to do\n     <code>\n      yum install wget\n     </code>\n     before this will work.\n    </p>\n    <blockquote>\n     <code>\n      wget https://raw.githubusercontent.com/angristan/wireguard-install/master/wireguard-install.sh\n     </code>\n    </blockquote>\n    <p>\n     Set the execution bit.\n    </p>\n    <blockquote>\n     <code>\n      chmod +x wireguard-install.sh\n     </code>\n    </blockquote>\n    <p>\n     Run the script.\n    </p>\n    <blockquote>\n     <code>\n      ./wireguard-install.sh\n     </code>\n    </blockquote>\n    <p>\n     Accept the defaults unless you have some reason to change them. For example, on a NAT IPv4 server, you’ll need to use one of your 20 allocated ports as the server’s WireGuard port. Or you may have pre-opened a certain port for WireGuard in your firewall.\n    </p>\n    <blockquote>\n     <code>\n      I need to ask you a few questions before starting the setup. You can leave the default options and just press enter if you are ok with them.\n      <br/>\n      <br/>\n      IPv4 or IPv6 public address: YY.YY.YY.YY\n      <br/>\n      Public interface: eth0\n      <br/>\n      WireGuard interface name: wg0\n      <br/>\n      Server's WireGuard IPv4: 10.66.66.1\n      <br/>\n      Server's WireGuard IPv6: fd42:42:42::1\n      <br/>\n      Server's WireGuard port [1-65535]: 63978\n      <br/>\n      First DNS resolver to use for the clients: 176.103.130.130\n      <br/>\n      Second DNS resolver to use for the clients (optional): 176.103.130.131\n      <br/>\n      <br/>\n      Okay, that was all I needed. We are ready to setup your WireGuard server now. You will be able to generate a client at the end of the installation. Press any key to continue...\n     </code>\n    </blockquote>\n    <p>\n     The script installs software for a couple of minutes. Then it asks you to name the first client. You can call the client something like\n     <code>\n      windows\n     </code>\n     . The actual name is up to you.\n    </p>\n    <blockquote>\n     <code>\n      Tell me a name for the client. The name must consist of alphanumeric character. It may also include an underscore or a dash.\n      <br/>\n      Client name: windows\n      <br/>\n      Client's WireGuard IPv4: 10.66.66.2\n      <br/>\n      Client's WireGuard IPv6: fd42:42:42::2\n     </code>\n    </blockquote>\n    <p>\n     The file\n     <code>\n      wg0-client-windows.conf\n     </code>\n     will be created, containing the configuration for your client. Copy the contents of that file to your Windows clipboard.\n    </p>\n    <blockquote>\n     <code>\n      cat wg0-client-windows.conf\n     </code>\n    </blockquote>\n    <p>\n     The script has stored the server’s WireGuard configuration in\n     <code>\n      /etc/wireguard/wg0.conf\n     </code>\n     . This file includes the IP masquerading rules for\n     <code>\n      iptables\n     </code>\n     or\n     <code>\n      firewalld\n     </code>\n     . The script has also created a systemd service file named\n     <code>\n      /lib/systemd/system/wg-quick@.service\n     </code>\n     . You can check the status of the service with the command:\n    </p>\n    <blockquote>\n     <code>\n      systemctl status wg-quick@wg0\n     </code>\n    </blockquote>\n    <h2>\n     <a id=\"client\">\n     </a>\n     Client\n    </h2>\n    <p>\n     Download the WireGuard for Windows client installer from the\n     <a href=\"https://www.wireguard.com/install/\" target=\"_blank\">\n      WireGuard site\n     </a>\n     . Run the installer.\n    </p>\n    <p>\n     After the install is done, launch WireGuard.\n    </p>\n    <ol>\n     <li>\n      Click\n      <strong>\n       Add Tunnel\n      </strong>\n      &gt;\n      <strong>\n       Add empty tunnel\n      </strong>\n      .\n     </li>\n     <li>\n      Give the tunnel a name.\n     </li>\n     <li>\n      Replace the contents of the tunnel definition with the contents of your\n      <code>\n       wg0-client-windows.conf\n      </code>\n      file from the server.\n     </li>\n     <li>\n      Click\n      <strong>\n       Save\n      </strong>\n      .\n     </li>\n     <li>\n      Click\n      <strong>\n       Activate\n      </strong>\n      .\n     </li>\n    </ol>\n    <p>\n     Now open a browser and surf the web over your VPN.\n    </p>\n    <h2>\n     <a id=\"error-unknown-device-type\">\n     </a>\n     Error: Unknown device type\n    </h2>\n    <p>\n     Sometimes\n     <code>\n      systemctl status wg-quick@wg0\n     </code>\n     shows\n     <code>\n      Error: Unknown device type\n     </code>\n     . There are various solutions. The solution that worked for me came from\n     <a href=\"https://blog.meer-web.nl/wireguard-attempting-to-install-and-configure-wireguard-fails-with-unknown-device-type-and-fatal-module-wireguard-not-found-in-directory/\" target=\"_blank\">\n      Meer-Web\n     </a>\n     . Start with the command:\n    </p>\n    <blockquote>\n     <code>\n      modprobe wireguard\n     </code>\n    </blockquote>\n    <p>\n     If it returns a result like this:\n    </p>\n    <blockquote>\n     <code>\n      modprobe: FATAL: Module wireguard not found in directory /lib/modules/4.18.0-193.14.2.el8_2.x86_64\n     </code>\n    </blockquote>\n    <p>\n     Then proceed with this solution. Get the version number:\n    </p>\n    <blockquote>\n     <code>\n      dkms status\n     </code>\n    </blockquote>\n    <p>\n     We will use as an example\n     <code>\n      1.0.20200729\n     </code>\n     . Substitute your version number into the commands that follow:\n    </p>\n    <blockquote>\n     <code>\n      dkms build wireguard/1.0.20200729\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      dkms install wireguard/1.0.20200729\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      modprobe wireguard\n     </code>\n    </blockquote>\n    <p>\n     The last command no longer returns an error. So continue:\n    </p>\n    <blockquote>\n     <code>\n      systemctl restart wg-quick@wg0\n     </code>\n    </blockquote>\n    <blockquote>\n     <code>\n      systemctl status wg-quick@wg0\n     </code>\n    </blockquote>\n    <p>\n     <em>\n      Updated 2020-08\n     </em>\n    </p>\n   </div>\n  </div>\n  <div id=\"footer\">\n   <div class=\"content\">\n    <p>\n     This site is provided for information only. It cannot replace the advice of a trained security professional. If lives or safety depend on your security, please seek the advice of an expert.\n    </p>\n   </div>\n  </div>\n </body>\n</html>\n"
}